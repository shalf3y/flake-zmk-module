#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt { quick-tap-ms = <200>; };

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        lbkt {
            bindings = <&kp LBKT>;
            key-positions = <28 29>;
            layers = <0>;
            timeout-ms = <25>;
        };

        rbkt {
            bindings = <&kp RBKT>;
            key-positions = <30 31>;
            layers = <0>;
            timeout-ms = <25>;
        };

        lpar {
            bindings = <&kp LPAR>;
            key-positions = <16 17>;
            layers = <0>;
            timeout-ms = <25>;
        };

        rpar {
            bindings = <&kp RPAR>;
            key-positions = <18 19>;
            layers = <0>;
            timeout-ms = <25>;
        };

        lbrc {
            bindings = <&kp LBRC>;
            key-positions = <40 41>;
            layers = <0>;
            timeout-ms = <25>;
        };

        rbrc {
            bindings = <&kp RBRC>;
            key-positions = <43 42>;
            layers = <0>;
            timeout-ms = <25>;
        };

        return {
            bindings = <&kp ENTER>;
            key-positions = <33 32 31>;
            layers = <0>;
            timeout-ms = <25>;
        };

        escape {
            bindings = <&kp ESC>;
            key-positions = <28 27 26>;
            layers = <0>;
            timeout-ms = <25>;
        };

        sqt {
            bindings = <&kp SQT>;
            key-positions = <27 28>;
            layers = <0>;
            timeout-ms = <25>;
        };

        dqt {
            bindings = <&kp DQT>;
            key-positions = <32 31>;
            layers = <0>;
            timeout-ms = <25>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <15 16>;
            layers = <0>;
            timeout-ms = <25>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <20 19>;
            layers = <0>;
            timeout-ms = <25>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <14 15>;
            layers = <0>;
            timeout-ms = <25>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <21 20>;
            layers = <0>;
            timeout-ms = <25>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <27 26>;
            layers = <0>;
            timeout-ms = <25>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <16 15 14>;
            layers = <0>;
            timeout-ms = <25>;
        };

        bslh {
            bindings = <&kp BSLH>;
            key-positions = <46 34>;
            layers = <0>;
            timeout-ms = <25>;
        };

        clrall {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <13 14 15 16>;
            timeout-ms = <25>;
            layers = <3>;
        };

        rclrall {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <22 21 20 19>;
            timeout-ms = <25>;
            layers = <3>;
        };

        comma {
            bindings = <&kp LC(LA(COMMA))>;
            key-positions = <43 44>;
            layers = <0>;
            timeout-ms = <25>;
        };

        stop {
            bindings = <&kp LA(LC(DOT))>;
            key-positions = <45 44>;
            layers = <0>;
            timeout-ms = <25>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&none  &none       &none      &none      &none           &none           &none      &none               &none         &none      &none       &none
&none  &kp Q       &kp W      &kp E      &kp R           &kp T           &kp Y      &kp U               &kp I         &kp O      &kp P       &none
&none  &kp A       &kp S      &kp D      &kp F           &kp G           &kp H      &kp J               &kp K         &kp L      &kp SEMI    &none
&none  &kp Z       &kp X      &kp C      &kp V           &kp B           &kp N      &kp M               &kp COMMA     &kp DOT    &kp FSLH    &none
       &kp LSHIFT  &kp LCTRL  &lt 2 TAB  &mt LGUI SPACE  &lt 1 RETURN    &lt 1 ESC  &mt RGUI BACKSPACE  &lt 2 DELETE  &kp RCTRL  &kp RSHIFT
            >;
        };

        sym {
            bindings = <
&trans  &trans    &trans  &trans    &trans    &trans       &trans     &trans    &trans    &trans    &trans    &trans
&trans  &kp F1    &kp F2  &kp F3    &kp F4    &kp F5       &kp F6     &kp F7    &kp F8    &kp F9    &kp F10   &trans
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &trans
&trans  &kp N0    &kp N1  &kp N2    &kp N3    &kp N4       &kp N5     &kp N6    &kp N7    &kp N8    &kp N9    &trans
        &trans    &trans  &trans    &trans    &trans       &trans     &trans    &trans    &trans    &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans     &trans  &trans  &trans  &trans       &trans        &trans    &trans                &trans        &trans      &trans
&trans  &kp SLASH  &kp N7  &kp N8  &kp N9  &kp MINUS    &kp C_VOL_UP  &kp HOME  &kp UP                &kp C_BRI_UP  &kp C_NEXT  &trans
&trans  &kp STAR   &kp N4  &kp N5  &kp N6  &kp PLUS     &kp C_MUTE    &kp LEFT  &kp DOWN              &kp RIGHT     &kp C_PLAY  &trans
&trans  &kp N0     &kp N1  &kp N2  &kp N3  &kp DOT      &kp C_VOL_DN  &kp END   &kp LG(LS(NUMBER_4))  &kp C_BRI_DN  &kp C_PREV  &trans
        &trans     &trans  &trans  &trans  &trans       &trans        &trans    &trans                &trans        &trans
            >;
        };

        sys {
            bindings = <
&trans  &trans        &trans        &trans        &trans          &trans          &trans        &trans          &trans        &trans        &trans        &trans
&none   &none         &none         &none         &studio_unlock  &soft_off       &soft_off     &studio_unlock  &none         &none         &none         &none
&none   &none         &none         &none         &none           &bt BT_CLR      &bt BT_CLR    &none           &none         &none         &none         &none
&none   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3    &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &none
        &trans        &trans        &trans        &trans          &trans          &trans        &trans          &trans        &trans        &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        to_sys {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
